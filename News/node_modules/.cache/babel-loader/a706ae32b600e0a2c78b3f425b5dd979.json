{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDIT MALHOTRA\\\\Desktop\\\\music-player-app\\\\music-player-app\\\\src\\\\Components\\\\SongModal.js\";\nimport React, { Component } from \"react\";\nimport \"./SongModal.css\";\n\nclass SongModal extends Component {\n  constructor(props) {\n    super(props); // this.song = null;\n\n    this.search = false;\n    this.state = {\n      song: null\n    };\n  } // render() {\n  //     this.song = this.props.object[0];\n  // return (\n  // <div className=\"modal\" ref=\"modal\">\n  //     <div className=\"modal-container\" ref=\"modal-container\">\n  //     <img src={this.song.image[2]['#text']} alt={this.song.name} id={this.song.mbid} />\n  //         <h4>{this.song.name}</h4>\n  //     </div>\n  // </div>\n  // );\n  // }\n\n\n  render() {\n    if (this.state.song) if (this.state.song.track) if (this.state.song !== null && this.state.song.track && this.state.song.track.mbid !== undefined && this.search === true) {\n      let track = this.state.song.track;\n      return React.createElement(\"div\", {\n        className: \"modal\",\n        ref: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-container\",\n        ref: \"modal-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, track ? React.createElement(\"img\", {\n        src: track.album.image[\"2\"][\"#text\"],\n        alt: track.name,\n        id: track.mbid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }) : null, track ? React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, track.name) : null, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, track ? React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Album : \", track.album.title) : null, track ? React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Artist : \", track.artist.name) : null), React.createElement(\"button\", {\n        className: \"close-btn\",\n        onClick: this.props.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Close\")));\n    } else if (this.search === false) {\n      return React.createElement(\"div\", {\n        className: \"modal\",\n        ref: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-container\",\n        ref: \"modal-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Searching...\"), React.createElement(\"button\", {\n        className: \"close-btn\",\n        onClick: this.props.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Close\")));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"modal\",\n        ref: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-container\",\n        ref: \"modal-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Track not Found\"), React.createElement(\"button\", {\n        className: \"close-btn\",\n        onClick: this.props.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }\n\n  async componentDidMount() {\n    const song = this.props.object[0];\n    const API_Key = \"07a7ff8132195a3f6f1d53d85daff649\";\n    const url = \"http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=\" + API_Key + \"&mbid=\" + song.mbid + \"&format=json\";\n    const res = await fetch(url);\n    const object = await res.json();\n    this.search = true;\n    this.setState({\n      song: object\n    });\n  }\n\n}\n\nexport default SongModal;","map":{"version":3,"sources":["C:\\Users\\UDIT MALHOTRA\\Desktop\\music-player-app\\music-player-app\\src\\Components\\SongModal.js"],"names":["React","Component","SongModal","constructor","props","search","state","song","render","track","mbid","undefined","album","image","name","title","artist","hide","componentDidMount","object","API_Key","url","res","fetch","json","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SongModal.css\";\n\nclass SongModal extends Component {\n  constructor(props) {\n    super(props);\n    // this.song = null;\n    this.search = false;\n    this.state = {\n      song: null\n    };\n  }\n  // render() {\n  //     this.song = this.props.object[0];\n\n  // return (\n  // <div className=\"modal\" ref=\"modal\">\n  //     <div className=\"modal-container\" ref=\"modal-container\">\n  //     <img src={this.song.image[2]['#text']} alt={this.song.name} id={this.song.mbid} />\n  //         <h4>{this.song.name}</h4>\n\n  //     </div>\n  // </div>\n  // );\n  // }\n  render() {\n    if (this.state.song)\n      if (this.state.song.track)\n        if (\n          this.state.song !== null &&\n          this.state.song.track &&\n          this.state.song.track.mbid !== undefined &&\n          this.search === true\n        ) {\n          let track = this.state.song.track;\n          return (\n            <div className=\"modal\" ref=\"modal\">\n              <div className=\"modal-container\" ref=\"modal-container\">\n                {track ? (\n                  <img\n                    src={track.album.image[\"2\"][\"#text\"]}\n                    alt={track.name}\n                    id={track.mbid}\n                  />\n                ) : null}\n                {track ? <h4>{track.name}</h4> : null}\n                <span>\n                  {track ? <h5>Album : {track.album.title}</h5> : null}\n                  {track ? <h5>Artist : {track.artist.name}</h5> : null}\n                </span>\n                <button className=\"close-btn\" onClick={this.props.hide}>\n                  Close\n                </button>\n              </div>\n            </div>\n          );\n        } else if (this.search === false) {\n          return (\n            <div className=\"modal\" ref=\"modal\">\n              <div className=\"modal-container\" ref=\"modal-container\">\n                <h1>Searching...</h1>\n                <button className=\"close-btn\" onClick={this.props.hide}>\n                  Close\n                </button>\n              </div>\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"modal\" ref=\"modal\">\n              <div className=\"modal-container\" ref=\"modal-container\">\n                <h1>Track not Found</h1>\n                <button className=\"close-btn\" onClick={this.props.hide}>\n                  Close\n                </button>\n              </div>\n            </div>\n          );\n        }\n  }\n\n  async componentDidMount() {\n    const song = this.props.object[0];\n    const API_Key = \"07a7ff8132195a3f6f1d53d85daff649\";\n    const url =\n      \"http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=\" +\n      API_Key +\n      \"&mbid=\" +\n      song.mbid +\n      \"&format=json\";\n    const res = await fetch(url);\n    const object = await res.json();\n    this.search = true;\n    this.setState({ song: object });\n  }\n}\n\nexport default SongModal;\n"]},"metadata":{},"sourceType":"module"}